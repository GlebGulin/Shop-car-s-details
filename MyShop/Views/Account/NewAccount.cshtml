@model NGLayer.Models.ViewModels.YourAccount.UsersViewModel

@{
    ViewBag.Title = "Регистрация";
}


<h2>Регистрация</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>UsersViewModel</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="FirstName">Имя</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.SurName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="SurName">Фамилия</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Почта</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Псевдоним</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Pass, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Пароль</label>
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Pass, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ConfirmPass, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Подтвердить пароль</label>
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPass, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPass, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.DateRegistration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateRegistration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateRegistration, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Зарегестрироваться" class="btn btn-default" />
                <a href="/account/enter">Войти</a>
            </div>
        </div>
    </div>
}

