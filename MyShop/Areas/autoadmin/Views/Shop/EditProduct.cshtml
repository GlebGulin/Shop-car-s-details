@model NGLayer.Models.ViewModels.Shop.ProductViewModel

@{
    ViewBag.Title = "Редактирование товара";
}

<h2>Номмер товара @Model.Id</h2>

<h2>Изменить товар</h2>

@if (TempData["EditProd"] != null)
{
    <div class="alert alert-success">Успешно изменено</div>
}
@using (Html.BeginForm("EditProduct", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>ProductViewModel</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <label class="control-label col-md-2">
                Картинка
            </label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ImageString, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageString, "", new { @class = "text-danger" })*@

                @*<img src="~/Content/images/Upload/Products/@Model.Id/@Model.ImageString" />*@
                <input type="file" name="file" id="ProductImage" value="Обновить" />
                @if (Model.ImageString != null)
                {
                    @*<img id="previewold" src="~/Content/images/Upload/Products/@Model.Id/Thumbs/@Model.ImageString" />*@
                    <img id="previewold" src="~/Content/images/Upload/Products/@Model.Id/@Model.ImageString" style="width:400px; height:auto;" />
                }
                <img id="preview" src="#" style="display:none" />
            </div>
        </div>

        <div class="form-group">

            <label class="control-label col-md-2">Категория</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Редактировать" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<br />
@if (!Model.MyPictures.Any())
{
    <h2>Галерея товаров пока еще не создана</h2>
}
<form method="post" action="/autoadmin/Shop/SaveGalleryImage" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
    <div class="fallback">
        <input type="file" name="file" multiple />
        <input type="submit" value="Upload" />
    </div>
</form>
@*action="/autoadmin/Shop/SaveGalleryImage"*@
<br /><br />
<hr>
@foreach (var image in Model.MyPictures)
{
    <div style="display: inline-block">
        <img src="/Content/images/Upload/Products/@Model.Id/Gallery/Thumbs/@image" />
        @Html.ActionLink("Удалить фото", "DelFromGallery", "Shop", new { @class = "deleteimage", data_name = image })
    </div>
}
<div>
    @Html.ActionLink("Вернуться к товарам", "Products")
</div>
<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />


@section Scripts {
    @*<script src="~/Scripts/dropzone/dropzone.js"></script>*@




<script>
        //Create Preview of image
        $(function () {

            function stringRead(inpute) {
                if (inpute.files && inpute.files[0]) {
                    $("#preview").show();
                    $("#previewold").hide();
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("img#preview")
                            .attr("src", e.target.result)
                            .width(400).height(auto);
                    }
                    reader.readAsDataURL(inpute.files[0]);
                }
            }
            $("#ProductImage").change(function () {
                stringRead(this);
            });
            //Use Dropzone
            Dropzone.autoDiscover = false;
            Dropzone.options.dropzoneForm = {
                acceptedFiles: "image/*",
                url: "/autoadmin/Shop/SaveGalleryImage",
                dictDefaultMessage:"Перетащите файлы сюда",
                init: function() {
                    this.on("complete", function (file) {
                        if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                            location.reload();
                        }
                    });

                    this.on("sending", function (file, xhr, formData) {
                        formData.append("id", @Model.Id);
                        console.log(id);
                    });
                }
            };
            /////////////////////////////////
            //Delete from Dropzone
            $('a.deleteimage').click(function (e) {
                //alert('Are you sure???');
                e.preventDefault();
                //Big question!!!!
                if (!confirm('Вы уверенны')) return false;
                var $this = $(this);
                var url = '/autoadmin/Shop/DelFromGallery';
                var imgName = $this.data('name');
                $.post(url, { id: @Model.Id, imgName: imgName }, function (data) {
                    $this.parent().fadeOut("fast");
                });

            });

        });

</script>
}
