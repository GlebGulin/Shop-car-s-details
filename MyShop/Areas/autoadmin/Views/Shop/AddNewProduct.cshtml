@model MyShop.Models.ViewModels.Shop.ProductViewModel

@{
    ViewBag.Title = "Добавить продукт";
}
@if (TempData["SMM"] != null)
{
    <div class="alert alert-success">Добавлено</div>
}
<h2>Добавить продукт</h2>

@using (Html.BeginForm("AddNewProduct", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@*ProductViewModel*@</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor("Название", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Название</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                Ссылка
            </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                </div>
</div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                Описание товара
            </label>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
</div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                Цена
            </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
</div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ImageString, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">
                Картинка
            </label>
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.ImageString, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageString, "", new { @class = "text-danger" })*@
                    <input type="file" name="newfile" id="ProductImage" />
                    <img id="preview" src="#" style="display:none"/>
                </div>
</div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @*@Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Категория</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CategoryId, Model.Categories, "Выбрать категорию", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
</div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить продукты" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к продукции", "Products")
</div>
@section Scripts {
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script>
        //Create Preview of image
        $(function () {
            function stringRead(inpute) {
                if (inpute.files && inpute.files[0]) {
                    $("#preview").show();
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("img#preview")
                            .attr("src", e.target.result)
                            .width(400).height(auto);
                    }
                    reader.readAsDataURL(inpute.files[0]);
                }
            }
            $("#ProductImage").change(function () {
                stringRead(this);
            });
        });
    </script>
}
